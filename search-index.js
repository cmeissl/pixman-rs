var searchIndex = JSON.parse('{\
"pixman":{"doc":"From the official pixman docs:","t":"NNNNNNNNNNNNNNNNNNNNNNNNNNNNGGNNNDNNDNNNNNNNNNNNNNDNNNNNNNNNNNNNNENDNDDNNEDENNNNNDNNNNNDDNNNNDDNNNNNSEDNNNNNNNENNNDNNNNNNDGGNDDENNNNNNDDNDDDDDDDDDDDDNNNNNNNNNNNNNNNSLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLCFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLMMMMMMLLLLMMMMMMLL","n":["A1","A1B1G1R1","A1B5G5R5","A1R1G1B1","A1R5G5B5","A2B10G10R10","A2B2G2R2","A2R10G10B10","A2R2G2B2","A4","A4B4G4R4","A4R4G4B4","A8","A8B8G8R8","A8R8G8B8","A8R8G8B8sRGB","Add","Atop","AtopReverse","B1G2R1","B2G3R3","B5G6R5","B8G8R8","B8G8R8A8","B8G8R8X8","Best","Best","Bilinear","Box16","Box32","C4","C8","Clear","Color","ColorBurn","ColorDodge","ConicalGradient","ConjointAtop","ConjointAtopReverse","ConjointClear","ConjointDst","ConjointIn","ConjointInReverse","ConjointOut","ConjointOutReverse","ConjointOver","ConjointOverReverse","ConjointSrc","ConjointXor","Convolution","CreateFailed","Darken","Difference","DisjointAtop","DisjointAtopReverse","DisjointClear","DisjointDst","DisjointIn","DisjointInReverse","DisjointOut","DisjointOutReverse","DisjointOver","DisjointOverReverse","DisjointSrc","DisjointXor","Dither","Dst","Edge","Exclustion","FTransform","FVector","Fast","Fast","Filter","Fixed","FormatCode","G1","G4","G8","Good","Good","GradientStop","HardLight","HslColor","HslHue","HslLuminosity","HslSaturation","Image","ImageRef","In","In","InReverse","Lighten","Line","LinearGradient","Multiply","Nearest","None","None","Normal","ONE","Operation","OperationFailed","OrderedBayer8","OrderedBlueNoise64","Out","Out","OutReverse","Over","OverReverse","Overlap","Overlay","Pad","Part","Point","R1G2B1","R3G3B2","R5G6B5","R8G8B8","R8G8B8A8","R8G8B8X8","RadialGradient","Rectangle16","Rectangle32","Reflect","Region16","Region32","Repeat","RgbFloat","RgbaFloat","Saturate","Screen","SeparableConvolution","SoftLight","Solid","Span","Src","Transform","TransformConvertError","Trap","Trapezoid","Triangle","UnknownDither","UnknownFilter","UnknownOperation","UnknownRepeat","UnsupportedDrmFourcc","UnsupportedFormatCode","Vector","X14R6G6B6","X1B5G5R5","X1R5G5B5","X2B10G10R10","X2R10G10B10","X4A4","X4B4G4R4","X4C4","X4G4","X4R4G4B4","X8B8G8R8","X8R8G8B8","Xor","YUY2","YV12","ZERO","a","add","add_trapezoids","add_traps","add_triangles","as_ptr","b","blit","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bot","bottom","bpp","clear","clear","clear_alpha_map","clear_alpha_map","clear_alpha_map","clear_alpha_map","clear_alpha_map","clear_transform","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","color","component_alpha","composite","composite32","composite_trapezoids","composite_triangles","compute_composite_region","contains_point","contains_point","contains_rectangle","contains_rectangle","data","default","default","depth","deref","deref","deref","deref","deref","drop","drop","drop","eq","eq","eq","ffi","fill","fill_boxes","fill_rectangles","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_double","from_f32","from_f64","from_int","from_line","from_ptr","from_ptr","from_ptr","from_ptr","from_ptr","from_ptr","from_raw","from_raw_mut","from_rotation","from_rotation","from_scale","from_scale","from_slice_mut","from_translation","from_translation","from_u32","g","hash","height","height","height","identity","identity","init_rect","init_rect","init_rects","init_rects","init_with_extents","init_with_extents","intersect","intersect","intersect_rect","intersect_rect","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_raw","inverse","inverse","invert","invert","is_identity","is_int_translate","is_inverse","is_non_empty","is_non_empty","is_scale","l","left","matrix","matrix","multiply","multiply","n_rects","n_rects","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","p1","p1","p2","p2","p3","partial_cmp","r","r","rasterize_edges","rasterize_trapezoid","rectangles","rectangles","reset","reset","right","rotate","rotate","sample_ceil_y","sample_floor_y","scale","scale","selfcheck","selfcheck","set_alpha_map","set_alpha_map","set_alpha_map","set_alpha_map","set_alpha_map","set_clip_region","set_clip_region32","set_component_alpha","set_dither","set_dither_offset","set_filter","set_has_client_clip","set_repeat","set_source_clipping","set_transform","step","stride","subtract","subtract","to_int","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","top","top","transform_bounds","transform_bounds","transform_point","transform_point","transform_point_3d","transform_point_3d","translate","translate","translate","translate","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","union","union_rect","union_rect","width","width","width","x","x","x","x","x","x","x1","x1","x2","x2","y","y","y","y","y","y","y1","y1","y2","y2","z","z"],"q":[[0,"pixman"],[793,"pixman_sys"],[794,"core::result"],[795,"core::cmp"],[796,"core::option"],[797,"core::convert"],[798,"core::fmt"],[799,"core::fmt"],[800,"pixman_sys"],[801,"std::os::raw"],[802,"alloc::string"],[803,"pixman_sys"],[804,"pixman_sys"]],"d":["1bpp A1","4bpp A1B1G1R1","16bpp A1B5G5R5","4bpp A1R1G1B1","16bpp A1R5G5B5","32bpp A2B10G10R10","8bpp A2B2G2R2","32bpp A2R10G10B10","8bpp A2R2G2B2","4bpp A4","16bpp A4B4G4R4","16bpp A4R4G4B4","8bpp A8","32bpp A8B8G8R8","32bpp A8R8G8B8","sRGB A8R8G8B8sRGB","Add","A-top","A-top-reverse","4bpp B1G2R1","8bpp B2G3R3","16bpp B5G6R5","24bpp B8G8R8","32bpp B8G8R8A8","32bpp B8G8R8X8","Best dithering","Best filtering","Bilinear filtering","16bit Box","32bit Box","4bpp C4","8bpp C8","Clear","Rgba color in the range of <code>u16::MIN</code> to <code>u16::MAX</code>","Color burn","Color dodge","Conical gradient image","Conjoint-a-top","Conjoint-a-top-reverse","Conjoint-clear","Conjoint-dst","Conjoint-in","Conjoint-in-reverse","Conjoint-out","Conjoint-out-reverse","Conjoint-over","Conjoint-over-reverse","Conjoint-src","Conjoint-xor","Custom convolution kernel","Resource creation failed","Darken","Difference","Disjoint-a-top","Disjoint-a-top-reverse","Disjoint-clear","Disjoint-dst","Disjoint-in","Disjoint-in-reverse","Disjoint-out","Disjoint-out-reverse","Disjoint-over","Disjoint-over-reverse","Disjoint-src","Disjoint-xor","Defiens the possible dither operations","Dst","Defines a single edge","Exclustion","Floating-point transform","Floating-point vector","Fast dithering","Fast filtering","Defines the possible filter operations","Fixed-point value","Possible format codes","1bpp G1","4bpp G4","8bpp G8","Good dithering","Good filtering","Gradient-stop","Hard-light","Hls color","Hls hue","Hls luminosity","Hls saturation","Image holding some pixel data","A reference to a raw image","In","Region contains a rectangle","In-reverse","Lighten","Single line","Linear gradient image","Multiply","Nearest-neighbor filtering","No dithering","No repeat","Normal repeat","One","Defines the possible operations for composition","The requested operation failed","Ordered bayer 8 dithering","Ordered blue noise 64","Out","No intersection","Out-reverse","Over","Over-reverse","Describes overlap of a region with a rectangle","Overlay","Pad repeat","Partial intersection","A single point","4bpp R1G2B1","8bpp R3G3B2","16bpp R5G6B5","24bpp R8G8B8","32bpp R8G8B8A8","32bpp R8G8B8X8","Radial gradient image","16bit Rectangle","32bit Rectangle","Reflect repeat","16bit region","32bit region","Defines the possible repeat operations","96bpp RgbFloat","128bpp RgbaFloat","Saturate","Screen","Custom separable convolution kernel","Soft-light","Solid color image","A single span","Src","Fixed-point transform","Failed to init Transform from FTransform","A single trap","A trapezoid","A triangle","The dither operation is unknown","The filter operation is unknown","The operation is unknown","The repeat operations is unknown","The provided drm-fourcc has no matching format code","The provided format code has no matching drm-fourcc","A single vector","32bpp X14R6G6B6","16bpp X1B5G5R5","16bpp X1R5G5B5","32bpp X2B10G10R10","32bpp X2R10G10B10","8bpp X4A4","16bpp X4B4G4R4","8bpp X4C4","8bpp X4G4","16bpp X4R4G4B4","32bpp X8B8G8R8","32bpp X8R8G8B8","Xor","YUV YUY2","YUV YV12","Zero","Get the alpha color component","","Add the specified trapezoids to this image","Add the specified traps to this image","Add the specified triangles to this image","Access the raw image pointer","Get the blue color component","Blit the src into the dst with the specified values","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Access the bot value of this trap","Access the bottom component of the trapezoid","Get the bpp for the specified format","Clear this region","Clear this region","Clear a previously set alpha map","Clear a previously set alpha map","Clear a previously set alpha map","Clear a previously set alpha map","Clear a previously set alpha map","Clear a previously applied transform","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Access the stop color","Whether the image has component alpha or unified alpha","Composite the specified src image into this image","Composite the specified src image into this image","Composite the specified trapezoids into this image","Composite the specified triangles into this image","Compute the composite region for the specified src","Whether this region contains the provided point","Whether this region contains the provided point","Whether this region contains the provided rectangle","Whether this region contains the provided rectangle","Access the underlying pixel data","","","Get the depth of the image","","","","","","","","","","","","","Fill the provided bits with the provided values","Fill this image with the specified boxes and color","Fill this image with the specified rectangles and color","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the format of the image","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Initialize this fixed-point from an <code>f64</code>","Create a <code>Color</code> from the provided components","Create a <code>Color</code> from the provided components","Initialize this fixed-point from an integer","Initialize one edge structure given a line, starting y …","Initialize the image from a raw pointer","Initialize the image from a raw pointer","Initialize the image from a raw pointer","Initialize the image from a raw pointer","Initialize the image from a raw pointer","Create a reference to a raw image","Initialize this fixed-point from a raw value","Create an image from some pre-allocated pixel data pointer","Initialize a transform from a rotation","Initialize a transform from a rotation","Initialize a transform from a scale","Initialize a transform from a scale","Create an image from some pre-allocated pixel data","Initialize a transform from a translation","Initialize a transform from a translation","Create a <code>Color</code> from the provided color value","Get the green color component","","Get the height of the image","","","Initialize an identity transform","Initialize an identity transform","Initialize a region from the provided values","Initialize a region from the provided values","Initialize the region from the provided boxes","Initialize the region from the provided boxes","Initialize the region from the provided extents","Initialize the region from the provided extents","Intersect the region with another region","Intersect the region with another region","Intersect the region with a rect","Intersect the region with a rect","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Access the raw fixed-point value","Take a region and a box and return a region that is …","Take a region and a box and return a region that is …","Invert this transform","Invert this transform","Whether this transform represents an identity transform","TODO: Docs","Whether this transform represents an inverse transform","Whether this region is empty","Whether this region is empty","Whether this transform contains a scale transform","Get the l component of this span","Access the left component of the trapezoid","Access the current transform matrix","Access the current transform matrix","Multiply this transform with the provided transform","Multiply this transform with the provided transform","Return the number of rects in this region","Return the number of rects in this region","Create a <code>Color</code> from the provided components","Create a edge from the provided values","Initialize the gradient stop from the provided valued","Create a new image with the specified format and size","Create a new conical gradient image usable as the src in …","Create a new linear gradient image usable as the src in …","Create a new radial gradient image usable as the src in …","Create a new solid color image usable as the src in blit …","Initialize a line from two points","Initialize the point from x and y values","Initialize the span with from the provided components","Initialize a transform from the provided matrix","Initialize a transform from the provided matrix","Initialize the trap from the provided values","Initialize a trapezoid from the provided values","Initialize the triangle from the provided values","Initialize a vector from the provided values","Initialize the vector from the specified values","Access the first point","Access the first point of this triangle","Access the second point","Access the second point of this triangle","Access the third point of this triangle","","Get the red color component","Get the r component of this span","Rasterize the specified edges","Rasterize the specified trapezoids","Returns the rectangles in this region","Returns the rectangles in this region","Reset this region to the provided box","Reset this region to the provided box","Access the right component of the trapezoid","Add a rotation to this transform","Add a rotation to this transform","Compute the smallest value greater than or equal to y …","Compute the largest value strictly less than y which is on …","Add a scale to this transform","Add a scale to this transform","Run a selfcheck on the region","Run a selfcheck on the region","Set an alpha map that will be used when this image is used …","Set an alpha map that will be used when this image is used …","Set an alpha map that will be used when this image is used …","Set an alpha map that will be used when this image is used …","Set an alpha map that will be used when this image is used …","Apply a clip region used during composition","Apply a clip region used during composition","Set whether the image has component alpha or unified alpha","Set the dither operation used during composition","Set the dither offset","Set the filter operation used during composition","Set whether the source clip was set by a client","Set the repeat operation for this image","Set whether the clip applies when the image is used as a …","Apply the specified transform during sampling from this …","Step an edge by any amount (including negative values)","Get the stride of the image","Subtract reg_s from reg_m and leave the result in reg_d. S …","Subtract reg_s from reg_m and leave the result in reg_d. S …","Get the int value of this fixed point","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Access the top value of this trap","Access the top component of the trapezoid","Transform the provided bounds","Transform the provided bounds","Transform the given point","Transform the given point","Transform the given point","Transform the given point","Translate this region by the specified amount","Translate this region by the specified amount","Add a translation to this transform","Add a translation to this transform","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create the union between this region and another region","Create the union between this region and another region","Create the union between this region and the provided rect","Create the union between this region and the provided rect","Get the width of the image","","","Access the stop x value","Access the x value","Access the x component of this vector","Access the x component of this vector","","","","","","","Access the y value","Get the y component of this span","Access the y component of this vector","Access the y component of this vector","","","","","","","Access the z component of this vector","Access the z component of this vector"],"i":[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,31,31,31,19,19,19,19,19,19,26,28,28,0,0,19,19,31,0,31,31,0,31,31,31,31,31,31,31,31,31,31,31,31,28,0,31,31,31,31,31,31,31,31,31,31,31,31,31,31,0,31,0,31,0,0,26,28,0,0,0,19,19,19,26,28,0,31,31,31,31,31,0,0,31,33,31,31,0,0,31,28,26,34,34,3,0,0,26,26,31,33,31,31,31,0,31,34,33,0,19,19,19,19,19,19,0,0,0,34,0,0,0,19,19,31,31,28,31,0,0,31,0,0,0,0,0,0,0,0,0,0,0,0,19,19,19,19,19,19,19,19,19,19,19,19,31,19,19,3,1,3,4,4,4,12,1,0,1,26,49,27,28,50,3,19,51,52,29,4,22,23,24,25,53,12,30,31,54,32,33,20,21,34,55,18,35,36,56,10,8,11,37,38,16,1,26,49,27,28,50,3,19,51,52,29,4,22,23,24,25,53,12,30,31,54,32,33,20,21,34,55,18,35,36,56,10,8,11,37,38,16,10,8,19,20,21,4,22,23,24,25,12,1,26,27,28,3,19,29,30,31,32,33,20,21,34,18,35,36,10,8,11,37,38,1,26,27,28,3,19,29,30,31,32,33,20,21,34,18,35,36,10,8,11,37,38,33,29,12,4,4,4,4,4,20,21,20,21,4,20,21,4,4,22,23,24,25,12,20,21,33,20,21,0,0,4,4,1,26,49,49,27,28,50,50,3,19,51,51,52,52,29,4,22,23,24,25,53,53,12,30,31,54,54,32,33,20,21,34,55,55,18,35,36,56,56,10,8,11,37,38,16,16,4,1,1,1,1,1,1,26,49,27,27,28,50,3,3,3,3,19,19,51,52,29,29,4,22,23,24,25,53,12,30,30,30,31,54,32,32,32,33,20,20,21,21,34,55,18,18,18,35,35,35,36,36,36,36,56,10,10,8,8,11,11,11,37,37,37,38,38,38,16,3,1,1,3,27,4,22,23,24,25,12,3,4,35,36,35,36,4,35,36,1,1,33,4,46,86,35,36,20,21,20,21,20,21,20,21,20,21,1,26,49,27,28,50,3,19,51,52,29,4,22,23,24,25,53,12,30,31,54,32,33,20,21,34,55,18,35,36,56,10,8,11,37,38,16,3,20,21,35,36,35,35,35,20,21,35,18,8,35,36,35,36,20,21,1,27,29,4,22,23,24,25,30,32,18,35,36,10,8,11,37,38,30,11,30,11,11,33,1,18,4,4,20,21,20,21,8,35,36,0,0,35,36,20,21,4,22,23,24,25,12,12,12,12,12,12,12,12,12,12,27,4,20,21,3,1,26,27,28,3,19,29,30,31,32,33,20,21,34,18,35,36,10,8,11,37,38,49,50,51,52,53,54,55,56,16,10,8,35,36,35,36,35,36,20,21,35,36,1,26,26,49,27,28,28,50,3,19,19,51,52,29,4,22,23,24,25,53,12,30,31,31,54,32,33,20,21,34,34,55,18,35,35,36,56,10,8,11,37,38,16,1,26,49,27,28,50,3,19,51,52,29,4,22,23,24,25,53,12,30,31,54,32,33,20,21,34,55,18,35,36,56,10,8,11,37,38,16,1,26,49,27,28,50,3,19,51,52,29,4,22,23,24,25,53,12,30,31,54,32,33,20,21,34,55,18,35,36,56,10,8,11,37,38,16,20,21,20,21,4,46,86,29,32,37,38,46,86,42,43,42,43,32,18,37,38,46,86,42,43,42,43,37,38],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[[3,3]],[[4,[7,[5,6]],[9,[8]]],7],[[4,[7,[5,5]],[9,[10]]],7],[[4,[7,[6,6]],[9,[11]]],7],[12,13],[1,2],[[[9,[14]],[9,[14]],15,15,15,15,15,15,15,15,15,15],[[17,[7,16]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[10,18],[8,3],[19,14],[20,7],[21,7],[4,4],[22,22],[23,23],[24,24],[25,25],[12,[[17,[7,16]]]],[1,1],[26,26],[27,27],[28,28],[3,3],[19,19],[29,29],[30,30],[31,31],[32,32],[33,33],[20,20],[21,21],[34,34],[18,18],[35,35],[36,36],[10,10],[8,8],[11,11],[37,37],[38,38],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[33,33],39],[29,1],[12,40],[[4,31,12,[41,[12]],[7,[5,5]],[7,[5,5]],[7,[5,5]],[7,[2,2]]],7],[[4,31,12,[41,[12]],[7,[6,6]],[7,[6,6]],[7,[6,6]],[7,[6,6]]],7],[[4,31,12,19,[7,[6,6]],[7,[6,6]],[9,[8]]],7],[[4,31,12,19,[7,[6,6]],[7,[6,6]],[9,[11]]],7],[[4,12,[41,[12]],[7,[5,5]],[7,[5,5]],[7,[5,5]],[7,[2,2]]],[[41,[20]]]],[[20,5,5],[[41,[42]]]],[[21,6,6],[[41,[43]]]],[[20,42],33],[[21,43],33],[4,14],[[],20],[[],21],[4,44],[4],[22],[23],[24],[25],[12,7],[20,7],[21,7],[[33,33],40],[[20,20],40],[[21,21],40],0,[[[9,[14]],14,14,14,14,14,14,14],[[17,[7,16]]]],[[4,31,-1,[9,[43]]],[[17,[7,16]]],[[45,[1]]]],[[4,31,-1,[9,[46]]],[[17,[7,16]]],[[45,[1]]]],[[1,47],48],[[26,47],48],[[49,47],48],[[49,47],48],[[27,47],48],[[28,47],48],[[50,47],48],[[50,47],48],[[3,47],48],[[19,47],48],[[51,47],48],[[51,47],48],[[52,47],48],[[52,47],48],[[29,47],48],[[4,47],48],[[22,47],48],[[23,47],48],[[24,47],48],[[25,47],48],[[53,47],48],[[53,47],48],[[12,47],48],[[30,47],48],[[31,47],48],[[54,47],48],[[54,47],48],[[32,47],48],[[33,47],48],[[20,47],48],[[21,47],48],[[34,47],48],[[55,47],48],[[55,47],48],[[18,47],48],[[35,47],48],[[36,47],48],[[56,47],48],[[56,47],48],[[10,47],48],[[8,47],48],[[11,47],48],[[37,47],48],[[38,47],48],[[16,47],48],[[16,47],48],[4,19],[14,1],[-1,-1,[]],[[[57,[2]]],1],[[[57,[58]]],1],[[[57,[59]]],1],[60,1],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[61,27],[-1,-1,[]],[-1,-1,[]],[6,3],[58,3],[59,3],[-1,-1,[]],[-1,-1,[]],[62,19],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[63,29],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[57,[-1]]],30,[[45,[32]],64]],[65,30],[-1,-1,[]],[-1,-1,[]],[66,32],[-1,-1,[]],[[[7,[-1,-2]]],32,[[45,[3]]],[[45,[3]]]],[-1,-1,[]],[67,20],[-1,-1,[]],[68,21],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[57,[-1]]],18,[[45,[3]],64]],[69,18],[-1,-1,[]],[70,35],[[[57,[[57,[-1]]]]],35,[[45,[3]],64]],[71,36],[-1,-1,[]],[[[57,[[57,[59]]]]],36],[35,36],[-1,-1,[]],[72,10],[-1,-1,[]],[-1,-1,[]],[73,8],[[[57,[-1]]],11,[[45,[32]],64]],[-1,-1,[]],[74,11],[[[57,[-1]]],37,[[45,[3]],64]],[75,37],[-1,-1,[]],[-1,-1,[]],[76,38],[[[57,[59]]],38],[-1,-1,[]],[59,3],[[58,58,58,58],1],[[59,59,59,59],1],[6,3],[[15,-1,-2,6,6],27,[[45,[3]]],[[45,[30]]]],[13,4],[13,22],[13,23],[13,24],[13,25],[13,12],[77,3],[[19,44,44,14,44,40],[[17,[4,53]]]],[[-1,-2],35,[[45,[3]]],[[45,[3]]]],[[59,59],36],[[-1,-2],35,[[45,[3]]],[[45,[3]]]],[[59,59],36],[[19,44,44,[9,[14]],44,40],[[17,[4,53]]]],[[-1,-2],35,[[45,[3]]],[[45,[3]]]],[[59,59],36],[14,1],[1,2],[[33,-1],7,78],[4,44],0,0,[[],35],[[],36],[[5,5,2,2],20],[[6,6,14,14],21],[[[9,[42]]],20],[[[9,[43]]],21],[[[9,[42]]],20],[[[9,[43]]],21],[[20,20],20],[[21,21],21],[[20,5,5,2,2],20],[[21,6,6,14,14],21],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[3,77],[[20,42],20],[[21,43],21],[35,[[41,[35]]]],[36,[[41,[36]]]],[35,40],[35,40],[[35,35],40],[20,40],[21,40],[35,40],[18,3],[8,30],[35,[[57,[[57,[3]]]]]],[36,[[57,[[57,[59]]]]]],[[35,35],35],[[36,36],36],[20,44],[21,44],[[2,2,2,2],1],[[6,-1,-2,-3,-4,-5],27,[[45,[3]]],[[45,[3]]],[[45,[3]]],[[45,[3]]],[[45,[3]]]],[[-1,-2],29,[[45,[3]]],[[45,[1]]]],[[19,44,44,40],[[17,[4,53]]]],[[-1,-2,[9,[29]]],[[17,[22,53]]],[[45,[32]]],[[45,[3]]]],[[-1,-2,[9,[29]]],[[17,[23,53]]],[[45,[32]]],[[45,[32]]]],[[-1,-2,-3,-4,[9,[29]]],[[17,[24,53]]],[[45,[32]]],[[45,[32]]],[[45,[3]]],[[45,[3]]]],[-1,[[17,[25,53]]],[[45,[1]]]],[[-1,-2],30,[[45,[32]]],[[45,[32]]]],[[-1,-2],32,[[45,[3]]],[[45,[3]]]],[[-1,-2,-3],18,[[45,[3]]],[[45,[3]]],[[45,[3]]]],[[[57,[[57,[-1]]]]],35,[[45,[3]],64]],[[[57,[[57,[59]]]]],36],[[-1,-2],10,[[45,[18]]],[[45,[18]]]],[[-1,-2,-3,-4],8,[[45,[3]]],[[45,[3]]],[[45,[30]]],[[45,[30]]]],[[-1,-2,-3],11,[[45,[32]]],[[45,[32]]],[[45,[32]]]],[[[57,[-1]]],37,[[45,[3]],64]],[[[57,[59]]],38],[30,32],[11,32],[30,32],[11,32],[11,32],[[33,33],[[41,[39]]]],[1,2],[18,3],[[4,27,27,-1,-2],7,[[45,[3]]],[[45,[3]]]],[[4,8,[7,[6,6]]],7],[20,[[9,[42]]]],[21,[[9,[43]]]],[[20,42],7],[[21,43],7],[8,30],[[35,-1,-2,40],[[41,[35]]],[[45,[3]]],[[45,[3]]]],[[36,59,59,40],[[41,[36]]]],[[-1,6],3,[[45,[3]]]],[[-1,6],3,[[45,[3]]]],[[35,-1,-2,40],[[41,[35]]],[[45,[3]]],[[45,[3]]]],[[36,59,59,40],[[41,[36]]]],[20,40],[21,40],[[4,4,5,5],4],[[22,4,5,5],22],[[23,4,5,5],23],[[24,4,5,5],24],[[25,4,5,5],25],[[12,[41,[20]]],[[17,[7,16]]]],[[12,[41,[21]]],[[17,[7,16]]]],[[12,40],7],[[12,26],7],[[12,79,79],7],[[12,28,[9,[3]]],[[17,[7,16]]]],[[12,40],7],[[12,34],7],[[12,40],7],[[12,-1],[[17,[7,16]]],[[45,[35]]]],[[27,6],7],[4,44],[[20,20],20],[[21,21],21],[3,6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[10,18],[8,3],[[35,42],[[41,[42]]]],[[36,42],[[41,[42]]]],[[35,37],[[41,[37]]]],[[36,38],[[41,[38]]]],[[35,37],37],[[36,38],38],[[20,5,5],7],[[21,6,6],7],[[35,-1,-2,40],[[41,[35]]],[[45,[3]]],[[45,[3]]]],[[36,59,59,40],[[41,[36]]]],[-1,[[17,[-2]]],[],[]],[81,[[17,[26]]]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[81,[[17,[28]]]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[82,[[17,[19]]]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[83,[[17,[31]]]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[84,[[17,[34]]]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[36,[[17,[35]]]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,85,[]],[-1,85,[]],[-1,85,[]],[-1,85,[]],[-1,85,[]],[-1,85,[]],[-1,85,[]],[-1,85,[]],[-1,85,[]],[-1,85,[]],[-1,85,[]],[-1,85,[]],[-1,85,[]],[-1,85,[]],[-1,85,[]],[-1,85,[]],[-1,85,[]],[-1,85,[]],[-1,85,[]],[-1,85,[]],[-1,85,[]],[-1,85,[]],[-1,85,[]],[-1,85,[]],[-1,85,[]],[-1,85,[]],[-1,85,[]],[-1,85,[]],[-1,85,[]],[-1,85,[]],[-1,85,[]],[-1,85,[]],[-1,85,[]],[-1,85,[]],[-1,85,[]],[-1,85,[]],[-1,85,[]],[[20,20],20],[[21,21],21],[[20,5,5,2,2],20],[[21,6,6,14,14],21],[4,44],0,0,[29,3],[32,3],[37,3],[38,59],0,0,0,0,0,0,[32,3],[18,3],[37,3],[38,59],0,0,0,0,0,0,[37,3],[38,59]],"c":[],"p":[[3,"Color",0],[15,"u16"],[3,"Fixed",0],[3,"Image",0],[15,"i16"],[15,"i32"],[15,"tuple"],[3,"Trapezoid",0],[15,"slice"],[3,"Trap",0],[3,"Triangle",0],[3,"ImageRef",0],[6,"pixman_image_t",793],[15,"u32"],[15,"isize"],[3,"OperationFailed",0],[4,"Result",794],[3,"Span",0],[4,"FormatCode",0],[3,"Region16",0],[3,"Region32",0],[3,"ConicalGradient",0],[3,"LinearGradient",0],[3,"RadialGradient",0],[3,"Solid",0],[4,"Dither",0],[3,"Edge",0],[4,"Filter",0],[3,"GradientStop",0],[3,"Line",0],[4,"Operation",0],[3,"Point",0],[4,"Overlap",0],[4,"Repeat",0],[3,"Transform",0],[3,"FTransform",0],[3,"Vector",0],[3,"FVector",0],[4,"Ordering",795],[15,"bool"],[4,"Option",796],[6,"Box16",0],[6,"Box32",0],[15,"usize"],[8,"Into",797],[6,"Rectangle16",0],[3,"Formatter",798],[6,"Result",798],[3,"UnknownDither",0],[3,"UnknownFilter",0],[3,"UnsupportedDrmFourcc",0],[3,"UnsupportedFormatCode",0],[3,"CreateFailed",0],[3,"UnknownOperation",0],[3,"UnknownRepeat",0],[3,"TransformConvertError",0],[15,"array"],[15,"f32"],[15,"f64"],[6,"pixman_color_t",793],[6,"pixman_edge_t",793],[6,"pixman_format_code_t",793],[6,"pixman_gradient_stop_t",793],[8,"Copy",799],[6,"pixman_line_fixed_t",793],[6,"pixman_point_fixed_t",793],[6,"pixman_region16_t",793],[6,"pixman_region32_t",793],[6,"pixman_span_fix_t",793],[6,"pixman_transform_t",793],[6,"pixman_f_transform_t",793],[6,"pixman_trap_t",793],[6,"pixman_trapezoid_t",793],[6,"pixman_triangle_t",793],[6,"pixman_vector_t",793],[6,"pixman_f_vector_t",793],[6,"pixman_fixed_t",793],[8,"Hasher",800],[6,"c_int",801],[3,"String",802],[6,"pixman_dither_t",793],[4,"DrmFourcc",803],[6,"pixman_op_t",793],[6,"pixman_repeat_t",793],[3,"TypeId",804],[6,"Rectangle32",0]],"b":[[335,"impl-Debug-for-UnknownDither"],[336,"impl-Display-for-UnknownDither"],[339,"impl-Debug-for-UnknownFilter"],[340,"impl-Display-for-UnknownFilter"],[343,"impl-Display-for-UnsupportedDrmFourcc"],[344,"impl-Debug-for-UnsupportedDrmFourcc"],[345,"impl-Display-for-UnsupportedFormatCode"],[346,"impl-Debug-for-UnsupportedFormatCode"],[353,"impl-Display-for-CreateFailed"],[354,"impl-Debug-for-CreateFailed"],[358,"impl-Debug-for-UnknownOperation"],[359,"impl-Display-for-UnknownOperation"],[365,"impl-Display-for-UnknownRepeat"],[366,"impl-Debug-for-UnknownRepeat"],[370,"impl-Debug-for-TransformConvertError"],[371,"impl-Display-for-TransformConvertError"],[377,"impl-Display-for-OperationFailed"],[378,"impl-Debug-for-OperationFailed"],[380,"impl-From%3Cu32%3E-for-Color"],[382,"impl-From%3C%5Bu16;+4%5D%3E-for-Color"],[383,"impl-From%3C%5Bf32;+4%5D%3E-for-Color"],[384,"impl-From%3C%5Bf64;+4%5D%3E-for-Color"],[385,"impl-From%3Cpixman_color%3E-for-Color"],[392,"impl-From%3Ci32%3E-for-Fixed"],[393,"impl-From%3Cf32%3E-for-Fixed"],[394,"impl-From%3Cf64%3E-for-Fixed"],[410,"impl-From%3C%5BP;+2%5D%3E-for-Line"],[411,"impl-From%3Cpixman_line_fixed%3E-for-Line"],[414,"impl-From%3Cpixman_point_fixed%3E-for-Point"],[416,"impl-From%3C(X,+Y)%3E-for-Point"],[425,"impl-From%3C%5BT;+3%5D%3E-for-Span"],[426,"impl-From%3Cpixman_span_fix%3E-for-Span"],[428,"impl-From%3Cpixman_transform%3E-for-Transform"],[429,"impl-From%3C%5B%5BT;+3%5D;+3%5D%3E-for-Transform"],[430,"impl-From%3Cpixman_f_transform%3E-for-FTransform"],[432,"impl-From%3C%5B%5Bf64;+3%5D;+3%5D%3E-for-FTransform"],[433,"impl-From%3CTransform%3E-for-FTransform"],[439,"impl-From%3C%5BP;+3%5D%3E-for-Triangle"],[441,"impl-From%3Cpixman_triangle%3E-for-Triangle"],[442,"impl-From%3C%5BT;+3%5D%3E-for-Vector"],[443,"impl-From%3Cpixman_vector%3E-for-Vector"],[446,"impl-From%3Cpixman_f_vector%3E-for-FVector"],[447,"impl-From%3C%5Bf64;+3%5D%3E-for-FVector"]]},\
"pixman_sys":{"doc":"","t":"NNNRRRRRRRRRRRRRNNNMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMFFFFGDGDGDGFFFFFFGRRRRRRDFFGDFFFFFFFFFFFFGFDGFFGRRRRRRRGGGGGGGRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRFFFFFFFFDFFFDDGDFFFFFFFFGFFFFFFFFFFFFFFFFFFFFFFFFFGFGDGGRRRRRRRRDFGGRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRDGFFGDGDGDDGGDFFFFDGFFFFFFFFFFFFFFFFFGFFFFFFFFFFFFFFFFFFFFGRRRFFFFFFFFGRRRRFFDGDFFFFFFFFFFFFFFFFGFDGDGDGDGFFGMMMMMMMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM","n":["None","None","None","PIXMAN_MAX_INDEXED","PIXMAN_TYPE_A","PIXMAN_TYPE_ABGR","PIXMAN_TYPE_ARGB","PIXMAN_TYPE_ARGB_SRGB","PIXMAN_TYPE_BGRA","PIXMAN_TYPE_COLOR","PIXMAN_TYPE_GRAY","PIXMAN_TYPE_OTHER","PIXMAN_TYPE_RGBA","PIXMAN_TYPE_RGBA_FLOAT","PIXMAN_TYPE_YUY2","PIXMAN_TYPE_YV12","Some","Some","Some","alpha","alpha","blue","blue","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bot","bot","bottom","bottom","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","color","color","color","color","data","data","data","data","dx","dx","dx_big","dx_big","dx_small","dx_small","dy","dy","e","e","ent","ent","extents","extents","extents","extents","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","glyph","green","green","height","height","height","height","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","l","l","left","left","m","m","matrix","matrix","numRects","numRects","numRects","numRects","p1","p1","p1","p1","p2","p2","p2","p2","p3","p3","pixman_add_trapezoids","pixman_add_traps","pixman_add_triangles","pixman_blt","pixman_bool_t","pixman_box16","pixman_box16_t","pixman_box32","pixman_box32_t","pixman_color","pixman_color_t","pixman_composite_glyphs","pixman_composite_glyphs_no_mask","pixman_composite_trapezoids","pixman_composite_triangles","pixman_compute_composite_region","pixman_disable_out_of_bounds_workaround","pixman_dither_t","pixman_dither_t_PIXMAN_DITHER_BEST","pixman_dither_t_PIXMAN_DITHER_FAST","pixman_dither_t_PIXMAN_DITHER_GOOD","pixman_dither_t_PIXMAN_DITHER_NONE","pixman_dither_t_PIXMAN_DITHER_ORDERED_BAYER_8","pixman_dither_t_PIXMAN_DITHER_ORDERED_BLUE_NOISE_64","pixman_edge","pixman_edge_init","pixman_edge_step","pixman_edge_t","pixman_f_transform","pixman_f_transform_bounds","pixman_f_transform_from_pixman_transform","pixman_f_transform_init_identity","pixman_f_transform_init_rotate","pixman_f_transform_init_scale","pixman_f_transform_init_translate","pixman_f_transform_invert","pixman_f_transform_multiply","pixman_f_transform_point","pixman_f_transform_point_3d","pixman_f_transform_rotate","pixman_f_transform_scale","pixman_f_transform_t","pixman_f_transform_translate","pixman_f_vector","pixman_f_vector_t","pixman_fill","pixman_filter_create_separable_convolution","pixman_filter_t","pixman_filter_t_PIXMAN_FILTER_BEST","pixman_filter_t_PIXMAN_FILTER_BILINEAR","pixman_filter_t_PIXMAN_FILTER_CONVOLUTION","pixman_filter_t_PIXMAN_FILTER_FAST","pixman_filter_t_PIXMAN_FILTER_GOOD","pixman_filter_t_PIXMAN_FILTER_NEAREST","pixman_filter_t_PIXMAN_FILTER_SEPARABLE_CONVOLUTION","pixman_fixed_16_16_t","pixman_fixed_1_16_t","pixman_fixed_1_31_t","pixman_fixed_32_32_t","pixman_fixed_48_16_t","pixman_fixed_t","pixman_format_code_t","pixman_format_code_t_PIXMAN_a1","pixman_format_code_t_PIXMAN_a1b1g1r1","pixman_format_code_t_PIXMAN_a1b5g5r5","pixman_format_code_t_PIXMAN_a1r1g1b1","pixman_format_code_t_PIXMAN_a1r5g5b5","pixman_format_code_t_PIXMAN_a2b10g10r10","pixman_format_code_t_PIXMAN_a2b2g2r2","pixman_format_code_t_PIXMAN_a2r10g10b10","pixman_format_code_t_PIXMAN_a2r2g2b2","pixman_format_code_t_PIXMAN_a4","pixman_format_code_t_PIXMAN_a4b4g4r4","pixman_format_code_t_PIXMAN_a4r4g4b4","pixman_format_code_t_PIXMAN_a8","pixman_format_code_t_PIXMAN_a8b8g8r8","pixman_format_code_t_PIXMAN_a8r8g8b8","pixman_format_code_t_PIXMAN_a8r8g8b8_sRGB","pixman_format_code_t_PIXMAN_b1g2r1","pixman_format_code_t_PIXMAN_b2g3r3","pixman_format_code_t_PIXMAN_b5g6r5","pixman_format_code_t_PIXMAN_b8g8r8","pixman_format_code_t_PIXMAN_b8g8r8a8","pixman_format_code_t_PIXMAN_b8g8r8x8","pixman_format_code_t_PIXMAN_c4","pixman_format_code_t_PIXMAN_c8","pixman_format_code_t_PIXMAN_g1","pixman_format_code_t_PIXMAN_g4","pixman_format_code_t_PIXMAN_g8","pixman_format_code_t_PIXMAN_r1g2b1","pixman_format_code_t_PIXMAN_r3g3b2","pixman_format_code_t_PIXMAN_r5g6b5","pixman_format_code_t_PIXMAN_r8g8b8","pixman_format_code_t_PIXMAN_r8g8b8a8","pixman_format_code_t_PIXMAN_r8g8b8x8","pixman_format_code_t_PIXMAN_rgb_float","pixman_format_code_t_PIXMAN_rgba_float","pixman_format_code_t_PIXMAN_x14r6g6b6","pixman_format_code_t_PIXMAN_x1b5g5r5","pixman_format_code_t_PIXMAN_x1r5g5b5","pixman_format_code_t_PIXMAN_x2b10g10r10","pixman_format_code_t_PIXMAN_x2r10g10b10","pixman_format_code_t_PIXMAN_x4a4","pixman_format_code_t_PIXMAN_x4b4g4r4","pixman_format_code_t_PIXMAN_x4c4","pixman_format_code_t_PIXMAN_x4g4","pixman_format_code_t_PIXMAN_x4r4g4b4","pixman_format_code_t_PIXMAN_x8b8g8r8","pixman_format_code_t_PIXMAN_x8r8g8b8","pixman_format_code_t_PIXMAN_yuy2","pixman_format_code_t_PIXMAN_yv12","pixman_format_supported_destination","pixman_format_supported_source","pixman_glyph_cache_create","pixman_glyph_cache_destroy","pixman_glyph_cache_freeze","pixman_glyph_cache_insert","pixman_glyph_cache_lookup","pixman_glyph_cache_remove","pixman_glyph_cache_t","pixman_glyph_cache_thaw","pixman_glyph_get_extents","pixman_glyph_get_mask_format","pixman_glyph_t","pixman_gradient_stop","pixman_gradient_stop_t","pixman_image","pixman_image_composite","pixman_image_composite32","pixman_image_create_bits","pixman_image_create_bits_no_clear","pixman_image_create_conical_gradient","pixman_image_create_linear_gradient","pixman_image_create_radial_gradient","pixman_image_create_solid_fill","pixman_image_destroy_func_t","pixman_image_fill_boxes","pixman_image_fill_rectangles","pixman_image_get_component_alpha","pixman_image_get_data","pixman_image_get_depth","pixman_image_get_destroy_data","pixman_image_get_format","pixman_image_get_height","pixman_image_get_stride","pixman_image_get_width","pixman_image_ref","pixman_image_set_accessors","pixman_image_set_alpha_map","pixman_image_set_clip_region","pixman_image_set_clip_region32","pixman_image_set_component_alpha","pixman_image_set_destroy_function","pixman_image_set_dither","pixman_image_set_dither_offset","pixman_image_set_filter","pixman_image_set_has_client_clip","pixman_image_set_indexed","pixman_image_set_repeat","pixman_image_set_source_clipping","pixman_image_set_transform","pixman_image_t","pixman_image_unref","pixman_index_type","pixman_indexed","pixman_indexed_t","pixman_kernel_t","pixman_kernel_t_PIXMAN_KERNEL_BOX","pixman_kernel_t_PIXMAN_KERNEL_CUBIC","pixman_kernel_t_PIXMAN_KERNEL_GAUSSIAN","pixman_kernel_t_PIXMAN_KERNEL_IMPULSE","pixman_kernel_t_PIXMAN_KERNEL_LANCZOS2","pixman_kernel_t_PIXMAN_KERNEL_LANCZOS3","pixman_kernel_t_PIXMAN_KERNEL_LANCZOS3_STRETCHED","pixman_kernel_t_PIXMAN_KERNEL_LINEAR","pixman_line_fixed","pixman_line_fixed_edge_init","pixman_line_fixed_t","pixman_op_t","pixman_op_t_PIXMAN_OP_ADD","pixman_op_t_PIXMAN_OP_ATOP","pixman_op_t_PIXMAN_OP_ATOP_REVERSE","pixman_op_t_PIXMAN_OP_CLEAR","pixman_op_t_PIXMAN_OP_COLOR_BURN","pixman_op_t_PIXMAN_OP_COLOR_DODGE","pixman_op_t_PIXMAN_OP_CONJOINT_ATOP","pixman_op_t_PIXMAN_OP_CONJOINT_ATOP_REVERSE","pixman_op_t_PIXMAN_OP_CONJOINT_CLEAR","pixman_op_t_PIXMAN_OP_CONJOINT_DST","pixman_op_t_PIXMAN_OP_CONJOINT_IN","pixman_op_t_PIXMAN_OP_CONJOINT_IN_REVERSE","pixman_op_t_PIXMAN_OP_CONJOINT_OUT","pixman_op_t_PIXMAN_OP_CONJOINT_OUT_REVERSE","pixman_op_t_PIXMAN_OP_CONJOINT_OVER","pixman_op_t_PIXMAN_OP_CONJOINT_OVER_REVERSE","pixman_op_t_PIXMAN_OP_CONJOINT_SRC","pixman_op_t_PIXMAN_OP_CONJOINT_XOR","pixman_op_t_PIXMAN_OP_DARKEN","pixman_op_t_PIXMAN_OP_DIFFERENCE","pixman_op_t_PIXMAN_OP_DISJOINT_ATOP","pixman_op_t_PIXMAN_OP_DISJOINT_ATOP_REVERSE","pixman_op_t_PIXMAN_OP_DISJOINT_CLEAR","pixman_op_t_PIXMAN_OP_DISJOINT_DST","pixman_op_t_PIXMAN_OP_DISJOINT_IN","pixman_op_t_PIXMAN_OP_DISJOINT_IN_REVERSE","pixman_op_t_PIXMAN_OP_DISJOINT_OUT","pixman_op_t_PIXMAN_OP_DISJOINT_OUT_REVERSE","pixman_op_t_PIXMAN_OP_DISJOINT_OVER","pixman_op_t_PIXMAN_OP_DISJOINT_OVER_REVERSE","pixman_op_t_PIXMAN_OP_DISJOINT_SRC","pixman_op_t_PIXMAN_OP_DISJOINT_XOR","pixman_op_t_PIXMAN_OP_DST","pixman_op_t_PIXMAN_OP_EXCLUSION","pixman_op_t_PIXMAN_OP_HARD_LIGHT","pixman_op_t_PIXMAN_OP_HSL_COLOR","pixman_op_t_PIXMAN_OP_HSL_HUE","pixman_op_t_PIXMAN_OP_HSL_LUMINOSITY","pixman_op_t_PIXMAN_OP_HSL_SATURATION","pixman_op_t_PIXMAN_OP_IN","pixman_op_t_PIXMAN_OP_IN_REVERSE","pixman_op_t_PIXMAN_OP_LIGHTEN","pixman_op_t_PIXMAN_OP_MULTIPLY","pixman_op_t_PIXMAN_OP_OUT","pixman_op_t_PIXMAN_OP_OUT_REVERSE","pixman_op_t_PIXMAN_OP_OVER","pixman_op_t_PIXMAN_OP_OVERLAY","pixman_op_t_PIXMAN_OP_OVER_REVERSE","pixman_op_t_PIXMAN_OP_SATURATE","pixman_op_t_PIXMAN_OP_SCREEN","pixman_op_t_PIXMAN_OP_SOFT_LIGHT","pixman_op_t_PIXMAN_OP_SRC","pixman_op_t_PIXMAN_OP_XOR","pixman_point_fixed","pixman_point_fixed_t","pixman_rasterize_edges","pixman_rasterize_trapezoid","pixman_read_memory_func_t","pixman_rectangle16","pixman_rectangle16_t","pixman_rectangle32","pixman_rectangle32_t","pixman_region16","pixman_region16_data","pixman_region16_data_t","pixman_region16_t","pixman_region32","pixman_region32_clear","pixman_region32_contains_point","pixman_region32_contains_rectangle","pixman_region32_copy","pixman_region32_data","pixman_region32_data_t","pixman_region32_equal","pixman_region32_extents","pixman_region32_fini","pixman_region32_init","pixman_region32_init_from_image","pixman_region32_init_rect","pixman_region32_init_rects","pixman_region32_init_with_extents","pixman_region32_intersect","pixman_region32_intersect_rect","pixman_region32_inverse","pixman_region32_n_rects","pixman_region32_not_empty","pixman_region32_rectangles","pixman_region32_reset","pixman_region32_selfcheck","pixman_region32_subtract","pixman_region32_t","pixman_region32_translate","pixman_region32_union","pixman_region32_union_rect","pixman_region_clear","pixman_region_contains_point","pixman_region_contains_rectangle","pixman_region_copy","pixman_region_equal","pixman_region_extents","pixman_region_fini","pixman_region_init","pixman_region_init_from_image","pixman_region_init_rect","pixman_region_init_rects","pixman_region_init_with_extents","pixman_region_intersect","pixman_region_intersect_rect","pixman_region_inverse","pixman_region_n_rects","pixman_region_not_empty","pixman_region_overlap_t","pixman_region_overlap_t_PIXMAN_REGION_IN","pixman_region_overlap_t_PIXMAN_REGION_OUT","pixman_region_overlap_t_PIXMAN_REGION_PART","pixman_region_rectangles","pixman_region_reset","pixman_region_selfcheck","pixman_region_set_static_pointers","pixman_region_subtract","pixman_region_translate","pixman_region_union","pixman_region_union_rect","pixman_repeat_t","pixman_repeat_t_PIXMAN_REPEAT_NONE","pixman_repeat_t_PIXMAN_REPEAT_NORMAL","pixman_repeat_t_PIXMAN_REPEAT_PAD","pixman_repeat_t_PIXMAN_REPEAT_REFLECT","pixman_sample_ceil_y","pixman_sample_floor_y","pixman_span_fix","pixman_span_fix_t","pixman_transform","pixman_transform_bounds","pixman_transform_from_pixman_f_transform","pixman_transform_init_identity","pixman_transform_init_rotate","pixman_transform_init_scale","pixman_transform_init_translate","pixman_transform_invert","pixman_transform_is_identity","pixman_transform_is_int_translate","pixman_transform_is_inverse","pixman_transform_is_scale","pixman_transform_multiply","pixman_transform_point","pixman_transform_point_3d","pixman_transform_rotate","pixman_transform_scale","pixman_transform_t","pixman_transform_translate","pixman_trap","pixman_trap_t","pixman_trapezoid","pixman_trapezoid_t","pixman_triangle","pixman_triangle_t","pixman_vector","pixman_vector_t","pixman_version","pixman_version_string","pixman_write_memory_func_t","r","r","red","red","rgba","rgba","right","right","signdx","signdx","size","size","size","size","stepx","stepx","stepx_big","stepx_big","stepx_small","stepx_small","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","top","top","top","top","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","v","v","vector","vector","width","width","width","width","x","x","x","x","x","x","x","x","x","x","x","x1","x1","x1","x1","x2","x2","x2","x2","y","y","y","y","y","y","y","y","y","y1","y1","y1","y1","y2","y2","y2","y2"],"q":[[0,"pixman_sys"],[763,"core::fmt"],[764,"core::fmt"],[765,"core::any"]],"d":["No value.","No value.","No value.","","","","","","","","","","","","","","Some value of type <code>T</code>.","Some value of type <code>T</code>.","Some value of type <code>T</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codei":[31,32,33,0,0,0,0,0,0,0,0,0,0,0,0,0,31,32,33,34,1,34,1,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,35,25,36,22,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,37,38,17,18,39,40,12,16,41,21,41,21,41,21,41,21,41,21,37,18,39,40,12,16,1,2,3,4,5,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,20,34,1,42,43,10,14,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,44,24,36,22,45,8,46,5,47,48,9,13,49,50,3,23,49,50,3,23,50,23,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,44,24,34,1,37,18,36,22,41,21,47,48,9,13,41,21,41,21,41,21,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,36,35,22,25,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,51,7,52,4,42,43,10,14,53,42,43,38,41,2,10,14,17,20,21,54,55,11,15,54,55,11,15,53,42,43,44,2,10,14,20,24,54,55,11,15,54,55,11,15],"fc":[],"p":[[3,"pixman_color",0],[3,"pixman_point_fixed",0],[3,"pixman_line_fixed",0],[3,"pixman_vector",0],[3,"pixman_transform",0],[3,"pixman_image",0],[3,"pixman_f_vector",0],[3,"pixman_f_transform",0],[3,"pixman_region16_data",0],[3,"pixman_rectangle16",0],[3,"pixman_box16",0],[3,"pixman_region16",0],[3,"pixman_region32_data",0],[3,"pixman_rectangle32",0],[3,"pixman_box32",0],[3,"pixman_region32",0],[3,"pixman_gradient_stop",0],[3,"pixman_indexed",0],[3,"pixman_glyph_cache_t",0],[3,"pixman_glyph_t",0],[3,"pixman_edge",0],[3,"pixman_trapezoid",0],[3,"pixman_triangle",0],[3,"pixman_span_fix",0],[3,"pixman_trap",0],[15,"tuple"],[3,"Formatter",763],[6,"Result",763],[4,"Result",764],[3,"TypeId",765],[6,"pixman_read_memory_func_t",0],[6,"pixman_write_memory_func_t",0],[6,"pixman_image_destroy_func_t",0],[6,"pixman_color_t",0],[6,"pixman_trap_t",0],[6,"pixman_trapezoid_t",0],[6,"pixman_indexed_t",0],[6,"pixman_gradient_stop_t",0],[6,"pixman_region16_t",0],[6,"pixman_region32_t",0],[6,"pixman_edge_t",0],[6,"pixman_rectangle16_t",0],[6,"pixman_rectangle32_t",0],[6,"pixman_span_fix_t",0],[6,"pixman_f_transform_t",0],[6,"pixman_transform_t",0],[6,"pixman_region16_data_t",0],[6,"pixman_region32_data_t",0],[6,"pixman_line_fixed_t",0],[6,"pixman_triangle_t",0],[6,"pixman_f_vector_t",0],[6,"pixman_vector_t",0],[6,"pixman_point_fixed_t",0],[6,"pixman_box16_t",0],[6,"pixman_box32_t",0]],"b":[]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
